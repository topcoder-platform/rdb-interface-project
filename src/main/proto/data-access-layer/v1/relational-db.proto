syntax = "proto3";

package topcoder.dal.rdb;

option java_package = "com.topcoder.dal.rdb";
option java_outer_classname = "RDBProtos";
option java_multiple_files = true;

enum ColumnType {
  COLUMN_TYPE_UNSPECIFIED = 0;
  COLUMN_TYPE_STRING = 1;
  COLUMN_TYPE_INT = 2;
  COLUMN_TYPE_LONG = 3;
  COLUMN_TYPE_FLOAT = 4;
  COLUMN_TYPE_DOUBLE = 5;
  COLUMN_TYPE_BOOLEAN = 6;
  COLUMN_TYPE_DATE = 7;
  COLUMN_TYPE_DATETIME = 8;
  COLUMN_TYPE_BLOB = 9;
}

message Value {
  oneof value {
    string string_value = 3;
    int32 int_value = 4;
    int64 long_value = 5;
    float float_value = 6;
    double double_value = 7;
    bool boolean_value = 8;
    string date_value = 9;
    string datetime_value = 10;
    bytes blob_value = 11;
  }
}

message Column {
  optional string table_name = 1;
  string name = 2;
  optional ColumnType type = 3;
}

enum Operator {
  OPERATOR_UNSPECIFIED = 0;
  OPERATOR_EQUAL = 1;
  OPERATOR_NOT_EQUAL = 2;
  OPERATOR_GREATER_THAN = 3;
  OPERATOR_GREATER_THAN_OR_EQUAL = 4;
  OPERATOR_LESS_THAN = 5;
  OPERATOR_LESS_THAN_OR_EQUAL = 6;
  OPERATOR_IN = 7;
  OPERATOR_NOT_IN = 8;
  OPERATOR_LIKE = 9;
  OPERATOR_NOT_LIKE = 10;
  OPERATOR_IS_NULL = 11;
  OPERATOR_IS_NOT_NULL = 12;
}

enum JoinType {
  JOIN_TYPE_UNSPECIFIED = 0;
  JOIN_TYPE_INNER = 1;
  JOIN_TYPE_LEFT = 2;
  JOIN_TYPE_RIGHT = 3;
  JOIN_TYPE_FULL = 4;
}

message WhereCriteria {
  Operator operator = 1;
  string key = 2;
  Value value = 3;
}

message RawQuery {
  string query = 1;
}

message Join {
  JoinType type = 1;
  optional string from_table_schema = 2;
  optional string join_table_schema = 3;
  string from_table = 4;
  string join_table = 5;
  string from_column = 6;
  string join_column = 7;
}

message SelectQuery {
  optional string schema = 1;
  string table = 2;
  repeated Column column = 3;
  repeated WhereCriteria where = 4;
  repeated string group_by = 5;
  repeated string order_by = 6;
  repeated Join join = 7;
  uint32 limit = 8;
  uint32 offset = 9;
}

message ColumnValue {
  string column = 1;
  Value value = 2;
}

message InsertQuery {
  optional string schema = 1;
  string table = 2;
  repeated ColumnValue column_value = 3;
  optional string id_column = 4;
  optional string id_sequence = 5;
  optional string id_table = 6;
}

message BulkInsertQuery {
  repeated InsertQuery insert = 1;
}

message UpdateQuery {
  optional string schema = 1;
  string table = 2;
  repeated ColumnValue column_value = 3;
  repeated WhereCriteria where = 4;
}

message DeleteQuery {
  optional string schema = 1;
  string table = 2;
  repeated WhereCriteria where = 3;
}

message Query {
  oneof query {
    RawQuery raw = 1;
    SelectQuery select = 2;
    InsertQuery insert = 3;
    UpdateQuery update = 4;
    DeleteQuery delete = 5;
  }
}

message Row {
  map<string, Value> values = 1;
}

message QueryRequest {
  Query query = 1;
}

message SelectQueryResult {
  repeated Row rows = 1;
}

message RawQueryResult {
  repeated Row rows = 1;
}

message InsertQueryResult {
  uint64 last_insert_id = 1;
}

message UpdateQueryResult {
  uint64 affected_rows = 1;
}

message DeleteQueryResult {
  uint64 affected_rows = 1;
}

message QueryResponse {
  oneof result {
    SelectQueryResult select_result = 1;
    InsertQueryResult insert_result = 2;
    UpdateQueryResult update_result = 3;
    DeleteQueryResult delete_result = 4;
    RawQueryResult raw_result = 5;
  }
}

service QueryService {
  rpc Query(QueryRequest) returns (QueryResponse);
}
